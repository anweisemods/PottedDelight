plugins {
	id 'multiloader-loader'
	id 'fabric-loom'
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.layered {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

	modImplementation("net.anweisen.notenoughpots:fabric:${notenoughpots_version}")

	modImplementation("vectorwing:FarmersDelight:1.21.1-${farmersdelight_fabric_version}+refabricated") {
		exclude(group: "net.fabricmc")
	}

	modLocalRuntime("vectorwing:FarmersDelight:1.21.1-${farmersdelight_fabric_version}+refabricated") {
		exclude(group: "net.fabricmc")
	}
}

repositories {
	maven {
		name = "Greenhouse Maven"
		url = 'https://repo.greenhouse.house/releases/'
	}
	maven {
		name = "Greenhouse Maven"
		url = 'https://repo.greenhouse.house/snapshots/' // Porting Lib Hotfixes
	}
	maven { url "https://mvn.devos.one/releases/" } // Porting Lib
	maven { url "https://mvn.devos.one/snapshots/" } // Porting Lib Betas
	maven { url "https://maven.fabricmc.net/" }
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release" // Reach Entity Attributes (Required by Porting Lib)
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url "https://jitpack.io/" // Fabric ASM
		content {
			excludeGroup "io.github.fabricators_of_create"
		}
	}
}

loom {
	def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
	if (aw.exists()) {
		accessWidenerPath.set(aw)
	}
	mixin {
		defaultRefmapName.set("${mod_id}.refmap.json")
	}
	runs {
		client {
			client()
			setConfigName('Fabric Client')
			ideConfigGenerated(true)
			runDir('runs/client')
		}
		server {
			server()
			setConfigName('Fabric Server')
			ideConfigGenerated(true)
			runDir('runs/server')
		}
	}
}
